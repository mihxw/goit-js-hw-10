{"version":3,"file":"1-timer.js","sources":["../src/js/1-timer.js"],"sourcesContent":["import flatpickr from 'flatpickr';\nimport iziToast from 'izitoast';\nimport 'flatpickr/dist/flatpickr.min.css';\nimport 'izitoast/dist/css/iziToast.min.css';\n\n// Ініціалізація елементів\nconst datetimePicker = document.querySelector('#datetime-picker');\nconst startButton = document.querySelector('button[data-start]');\nconst timerFields = document.querySelectorAll('.timer .value');\n\nlet userSelectedDate = null;\nlet timerInterval = null;\n\n// Функція форматування числа з додаванням нуля, якщо потрібно\nconst addLeadingZero = value => String(value).padStart(2, '0');\n\n// Функція для конвертації мілісекунд в об'єкт з днями, годинами, хвилинами та секундами\nfunction convertMs(ms) {\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  const days = Math.floor(ms / day);\n  const hours = Math.floor((ms % day) / hour);\n  const minutes = Math.floor((ms % day % hour) / minute);\n  const seconds = Math.floor((ms % day % hour % minute) / second);\n\n  return { days, hours, minutes, seconds };\n}\n\n// Оновлення інтерфейсу таймера\nfunction updateTimerDisplay({ days, hours, minutes, seconds }) {\n  timerFields[0].textContent = addLeadingZero(days);\n  timerFields[1].textContent = addLeadingZero(hours);\n  timerFields[2].textContent = addLeadingZero(minutes);\n  timerFields[3].textContent = addLeadingZero(seconds);\n}\n\n// Ініціалізація бібліотеки flatpickr\nflatpickr(datetimePicker, {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n    userSelectedDate = selectedDates[0];\n\n    if (userSelectedDate && userSelectedDate < new Date()) {\n      iziToast.error({\n        title: 'Error',\n        message: 'Please choose a date in the future',\n      });\n      startButton.disabled = true;\n    } else {\n      startButton.disabled = false;\n    }\n  },\n});\n\n// Обробка натискання кнопки Start\nstartButton.addEventListener('click', () => {\n  if (userSelectedDate) {\n    startButton.disabled = true;\n    datetimePicker.disabled = true;\n\n    // Запуск зворотного відліку\n    timerInterval = setInterval(() => {\n      const timeLeft = userSelectedDate - new Date();\n      if (timeLeft <= 0) {\n        clearInterval(timerInterval);\n        updateTimerDisplay({ days: 0, hours: 0, minutes: 0, seconds: 0 });\n        return;\n      }\n      const time = convertMs(timeLeft);\n      updateTimerDisplay(time);\n    }, 1000);\n  }\n});"],"names":["datetimePicker","startButton","timerFields","userSelectedDate","timerInterval","addLeadingZero","value","convertMs","ms","days","hours","minutes","seconds","updateTimerDisplay","flatpickr","selectedDates","iziToast","timeLeft","time"],"mappings":"2GAMA,MAAMA,EAAiB,SAAS,cAAc,kBAAkB,EAC1DC,EAAc,SAAS,cAAc,oBAAoB,EACzDC,EAAc,SAAS,iBAAiB,eAAe,EAE7D,IAAIC,EAAmB,KACnBC,EAAgB,KAGpB,MAAMC,EAAiBC,GAAS,OAAOA,CAAK,EAAE,SAAS,EAAG,GAAG,EAG7D,SAASC,EAAUC,EAAI,CAMrB,MAAMC,EAAO,KAAK,MAAMD,EAAK,KAAG,EAC1BE,EAAQ,KAAK,MAAOF,EAAK,MAAO,IAAI,EACpCG,EAAU,KAAK,MAAOH,EAAK,MAAM,KAAQ,GAAM,EAC/CI,EAAU,KAAK,MAAOJ,EAAK,MAAM,KAAO,IAAU,GAAM,EAE9D,MAAO,CAAE,KAAAC,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC,CAGA,SAASC,EAAmB,CAAE,KAAAJ,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,EAAI,CAC7DV,EAAY,CAAC,EAAE,YAAcG,EAAeI,CAAI,EAChDP,EAAY,CAAC,EAAE,YAAcG,EAAeK,CAAK,EACjDR,EAAY,CAAC,EAAE,YAAcG,EAAeM,CAAO,EACnDT,EAAY,CAAC,EAAE,YAAcG,EAAeO,CAAO,CACrD,CAGAE,EAAUd,EAAgB,CACxB,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQe,EAAe,CACrBZ,EAAmBY,EAAc,CAAC,EAE9BZ,GAAoBA,EAAmB,IAAI,MAC7Ca,EAAS,MAAM,CACb,MAAO,QACP,QAAS,oCACjB,CAAO,EACDf,EAAY,SAAW,IAEvBA,EAAY,SAAW,EAE1B,CACH,CAAC,EAGDA,EAAY,iBAAiB,QAAS,IAAM,CACtCE,IACFF,EAAY,SAAW,GACvBD,EAAe,SAAW,GAG1BI,EAAgB,YAAY,IAAM,CAChC,MAAMa,EAAWd,EAAmB,IAAI,KACxC,GAAIc,GAAY,EAAG,CACjB,cAAcb,CAAa,EAC3BS,EAAmB,CAAE,KAAM,EAAG,MAAO,EAAG,QAAS,EAAG,QAAS,CAAC,CAAE,EAChE,MACD,CACD,MAAMK,EAAOX,EAAUU,CAAQ,EAC/BJ,EAAmBK,CAAI,CACxB,EAAE,GAAI,EAEX,CAAC"}